#include <iostream>
void swap(int arr[], int i, int j){
    int tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp;
}
void insertion_sort(int arr[], int start, int last){
	for(int i = start ;i <= last; i++){
		for(int j = i; j > start; j--){
			if(arr[j] < arr[j-1])
				swap(arr, j, j-1);
		}
	}
}
void quicksort(int arr[], int start, int last){
    if(start >= last)
    	return;
	if((last - start) <= 4){
		insertion_sort(arr, start, last);
		return;
	}	
    int pivot = arr[start];
    int i = start + 1;
    int j = last;
    while(i<=j){
        while(pivot >= arr[i] && i < last)
            i++;
        while(pivot <= arr[j] && j > start)
            j--;
        if(i > j){
            swap(arr, start, j);
            break;
        }
        swap(arr, i, j);      
    }
    quicksort(arr, start, j-1);
    quicksort(arr, i, last);
}
int main(){
    int len;
    scanf("%d", &len);
    int *arr = new int[len];
    for(int i=0; i<len; i++){
        scanf("%d", &(arr[i]));
    }
    quicksort(arr, 0, len-1);
    
    for(int i=0; i<len-1; i++){
        printf("%d\n", arr[i]);
    }
    printf("%d",arr[len-1]);
    return 0;
}
